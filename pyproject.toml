[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kcs"
version = "1.0.0"
description = "Kernel Context Server - Ground-truth Linux kernel analysis via MCP"
authors = [{name = "KCS Team", email = "team@kcs.dev"}]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Rust",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Operating System Kernels :: Linux",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "asyncpg>=0.29.0",
    "pydantic>=2.5.0",
    "structlog>=23.2.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "click>=8.1.0",
    "aiofiles>=23.2.1",
    "pgvector>=0.2.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.25.0",
    "testcontainers[postgres]>=3.7.0",
    "ruff>=0.13.0",
    "mypy>=1.18.1",
    "pre-commit>=3.5.0",
    "detect-secrets>=1.4.0",
    "sqlfluff>=2.3.0",
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "psutil>=5.9.0",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0",
    "types-psutil>=5.9.0",
]

performance = [
    "k6",
    "locust>=2.17.0",
]

tracing = [
    "aya-tool>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/your-org/kcs"
Repository = "https://github.com/your-org/kcs.git"
Documentation = "https://docs.kcs.dev"
Issues = "https://github.com/your-org/kcs/issues"

[project.scripts]
kcs-mcp = "kcs_mcp.cli:main"
kcs-ci = "kcs_ci.cli:main"

[tool.setuptools.packages.find]
where = ["src/python"]

[tool.setuptools.package-dir]
"" = "src/python"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["kcs_mcp.*"]
disallow_untyped_decorators = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "contract: marks tests as contract tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src/python"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
