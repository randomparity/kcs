version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: kcs
      POSTGRES_USER: kcs
      POSTGRES_PASSWORD: kcs_dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/sql/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kcs -d kcs"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kcs-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - kcs-network

  kcs-mcp:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: postgresql://kcs:kcs_dev_password@postgres:5432/kcs
      REDIS_URL: redis://redis:6379/0
      JWT_SECRET: dev_jwt_secret_change_in_production
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - kcs-network
    profiles:
      - app

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./tools/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./tools/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - kcs-network
    profiles:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./tools/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - kcs-network
    profiles:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:

networks:
  kcs-network:
    driver: bridge
